<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tv="clr-namespace:WpfApplication2.CustomTreeView"
                    xmlns:con="clr-namespace:WpfApplication2.Converter"
                    xmlns:data="clr-namespace:WpfApplication2.Data"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    >
    
    <con:ColumnGroupToStringConverter x:Key="ColumnGroupToString" />
    <SolidColorBrush x:Key="NodePopupSummaryBackground" Color="#FF414141"/>
    <SolidColorBrush x:Key="NodePopupItemBorder" Color="#FF4C4C4C"/>
    <SolidColorBrush x:Key="OperatorStatisticsTreeviewItemValueForeground" Color="White"/>
    <SolidColorBrush x:Key="OperatorStatisticsTreeviewItemNameForeground" Color="#FFEFEFD6"/>
    <sys:Double x:Key="TreeViewIconWidth">16</sys:Double>
    <sys:Double x:Key="OperatorStatisticsTreeViewItemWidth" >470</sys:Double>
    <sys:Double x:Key="OperatorStatisticsTreeViewCaptionWidth" >250</sys:Double>
    <con:OffSetLevelWidthConverter x:Key="offSetLevelWidthConverter" />
    <DataTemplate x:Key="OperatorDetailsItemDataWithPrecentageDisplay" > 
         <TextBlock HorizontalAlignment="Stretch"> 
             <TextBlock.Text> 
                 <MultiBinding StringFormat="{}{0:N7} ({0:0%})"> 
                     <Binding Path="[0].PropertyValue"/> 
                     <Binding Path="[1].PropertyValue"/> 
                 </MultiBinding> 
             </TextBlock.Text> 
         </TextBlock> 
     </DataTemplate> 
  
     <DataTemplate x:Key="OperatorDetailDataSizeDisplay"> 
         <!--<TextBlock Text="{Binding Converter={x:Static conver:NumberToBytesConverter.Instance}}" TextWrapping="Wrap"/>--> 
     </DataTemplate> 
  
     <DataTemplate x:Key="OperatorDetailDigitDisplay"> 
         <!--<TextBlock Text="{Binding Converter={x:Static conver:DigitToFormatStringConverter.Instance}}" TextWrapping="Wrap"/>--> 
     </DataTemplate> 

     <DataTemplate x:Key="OperatorDetailColumnReferenceListTypeDisplay" > 
         <!--<TextBlock Text="{Binding Converter={x:Static conver:ColumnReferenceListTypeDtoToStringConverter.Instance}}" TextWrapping="Wrap"/>--> 
     </DataTemplate> 
  
     <DataTemplate x:Key="OperatorDetailScalarExpressionTypeDisplay"> 
         <!--<TextBlock Text="{Binding Converter={x:Static conver:ScalarExpressionTypeDtoToStringConverter.Instance}}" TextWrapping="Wrap"/>--> 
     </DataTemplate> 
  
     <DataTemplate x:Key="MissingIndexesGorupHeader" > 
         <TextBlock HorizontalAlignment="Stretch"> 
             <TextBlock.Text> 
                 <MultiBinding StringFormat="{}Impact:{0:N7}, Count:{1}"> 
                     <Binding Path="Impact"/> 
                     <Binding Path="MissingIndex.Count"/> 
                 </MultiBinding> 
             </TextBlock.Text> 
         </TextBlock> 
     </DataTemplate> 
  
     <DataTemplate x:Key="MissingIndexesHeader" > 
         <TextBlock HorizontalAlignment="Stretch" Foreground="#d0d0d0"> 
             <TextBlock.Text> 
                 <MultiBinding StringFormat="{}{0}.{1}.{2}({3})"> 
                     <Binding Path="Schema"/> 
                     <Binding Path="Database"/> 
                     <Binding Path="Table"/> 
                     <Binding Path="ColumnGroup" Converter="{StaticResource ColumnGroupToString}"/> 
                 </MultiBinding> 
             </TextBlock.Text> 
         </TextBlock> 
     </DataTemplate> 
  
     <DataTemplate x:Key="MissingIndexesDisplayColumnGroup" > 
         <TextBlock HorizontalAlignment="Stretch"> 
             <TextBlock.Text> 
                 <MultiBinding StringFormat="Usage: {0}"> 
                     <Binding Path="Usage"/> 
                 </MultiBinding> 
             </TextBlock.Text></TextBlock> 
     </DataTemplate> 
      
     <DataTemplate x:Key="MissingIndexesDisplayTableColumnValue" > 
         <TextBlock HorizontalAlignment="Stretch"> 
             <TextBlock.Text> 
                 <MultiBinding StringFormat="Column ID: {0}"> 
                     <Binding Path="ColumnId"/> 
                 </MultiBinding> 
             </TextBlock.Text></TextBlock> 
     </DataTemplate> 
  
     <DataTemplate x:Key="MissingIndexesDisplayTableColumnName" > 
         <TextBlock HorizontalAlignment="Stretch" > 
             <TextBlock.Text> 
                 <MultiBinding StringFormat="{}{0}"> 
                     <Binding Path="Name"/> 
                 </MultiBinding> 
             </TextBlock.Text> 
         </TextBlock> 
     </DataTemplate> 
      
     <DataTemplate x:Key="OperatorDetailSimpleDataBaseContentDisplay"> 
         <TextBlock TextTrimming="WordEllipsis" Text="{Binding}"/> 
     </DataTemplate> 
  
     <Style TargetType="ContentControl" x:Key="OperatorDetailsItemDisplay"> 
         <Setter Property="HorizontalAlignment" Value="Left"/> 
         <Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type tv:TreeViewItemProperty}}}" /> 
     </Style> 
  
     <Style TargetType="ContentControl" x:Key="OperatorDetailsItemRightDisplay"> 
         <Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type tv:TreeViewItemProperty}}}" /> 
         <Setter Property="HorizontalAlignment" Value="Left"/> 
         <Setter Property="ContentTemplate" Value="{Binding InlineTemplate.ContentDataTemplate, Mode=TwoWay}"/> 
         <Style.Triggers> 
             <DataTrigger Binding="{Binding DefinitionType}" Value="PercentageDefinition"> 
                 <Setter Property="ContentTemplate" Value="{StaticResource OperatorDetailsItemDataWithPrecentageDisplay}"/> 
             </DataTrigger> 
             <DataTrigger Binding="{Binding InlineTemplate.ContentDataTemplate}" Value="{x:Null}"> 
                 <Setter Property="ContentTemplate" Value="{StaticResource OperatorDetailSimpleDataBaseContentDisplay}"/> 
             </DataTrigger> 
         </Style.Triggers> 
     </Style> 
  
     <DataTemplate x:Key="ItemLeftAndRight"> 
         <Grid HorizontalAlignment="Stretch"> 
             <Grid.ColumnDefinitions> 
                 <ColumnDefinition Width="Auto"/> 
                 <ColumnDefinition> 
                     <ColumnDefinition.Width> 
                         <MultiBinding Converter="{StaticResource offSetLevelWidthConverter}"> 
                             <Binding Path="." RelativeSource="{RelativeSource AncestorType={x:Type tv:TreeViewItemProperty}}" />
                             <Binding Source="{StaticResource TreeViewIconWidth}" />
                         </MultiBinding> 
                     </ColumnDefinition.Width> 
                 </ColumnDefinition> 
  
                 <ColumnDefinition x:Name="ColLeft" Width="*"/> 
                 <ColumnDefinition Width="Auto"/> 
                 <ColumnDefinition x:Name="ColRight" Width="280"/> 
             </Grid.ColumnDefinitions> 
             <Grid.RowDefinitions> 
                 <RowDefinition Height="Auto"/> 
                 <RowDefinition Height="Auto"/> 
             </Grid.RowDefinitions>
            <Rectangle Name="GroupLine" HorizontalAlignment="Center" Width="1" VerticalAlignment="Stretch" Stroke="#8888" Grid.Column="0" Visibility="Collapsed" SnapsToDevicePixels="true"/>
             
            <ToggleButton Name="Expander" Grid.Column="0" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type tv:TreeViewItemProperty}}}"   
                           ClickMode="Press" Visibility="Collapsed" > 
                 <ToggleButton.Style> 
                     <Style TargetType="ToggleButton"> 
                         <Setter Property="UIElement.Focusable" Value="false" /> 
                         <Setter Property="FrameworkElement.Width"  Value="{StaticResource TreeViewIconWidth}" /> 
                         <!--Temporary solution: The ToggleButton can not completely covered the column--> 
                         <Setter Property="Margin" Value="0,0,0,-1" /> 
                         <Setter Property="Cursor" Value="Hand" /> 
                         <Setter Property="Control.Template"> 
                             <Setter.Value> 
                                 <ControlTemplate TargetType="ToggleButton"> 
                                     <Grid Width="{TemplateBinding FrameworkElement.Width}" Height="13" SnapsToDevicePixels="True"> 
                                         <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true"> 
                                             <Rectangle.Fill> 
                                                 <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0"> 
                                                     <GradientStop Color="White" Offset="0"/> 
                                                     <GradientStop Color="Silver" Offset="0.5"/> 
                                                     <GradientStop Color="LightGray" Offset="1"/> 
                                                 </LinearGradientBrush> 
                                             </Rectangle.Fill> 
                                         </Rectangle> 
                                         <!--Vertical line inside rectangle--> 
                                         <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/> 
                                         <!--Horizontal line inside rectangle--> 
                                         <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/> 
                                     </Grid> 
                                     <ControlTemplate.Triggers> 
                                         <Trigger Property="ToggleButton.IsChecked" Value="True"> 
                                             <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/> 
                                         </Trigger> 
                                     </ControlTemplate.Triggers> 
                                 </ControlTemplate> 
                             </Setter.Value> 
                         </Setter> 
                     </Style> 
                 </ToggleButton.Style> 
             </ToggleButton>
            
             <ContentControl x:Name="ctlLeft" Grid.Column="2" Style="{StaticResource OperatorDetailsItemDisplay}" 
                             Content="{Binding Path=LeftContent}"  
                             ContentTemplate="{Binding Path=InlineTemplate.HeaderDataTemplate}"/> 
  
             <TextBlock x:Name="ctlSplit" Text=":" Grid.Column="3" Width="10"/> 
             <ContentControl x:Name="ctlRight" Grid.Column="4" Grid.Row="0" Style="{StaticResource OperatorDetailsItemRightDisplay}" 
                             Foreground="{StaticResource ResourceKey=OperatorStatisticsTreeviewItemValueForeground}" 
                             Content="{Binding Path=RightContent}"/> 
         </Grid> 
         <DataTemplate.Triggers> 
             <DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type tv:TreeViewItemProperty}}}" Value="Vertical"> 
                 <Setter TargetName="ctlSplit" Property="Visibility" Value="Collapsed"/> 
                 <Setter TargetName="ColRight" Property="Width" Value="0"/> 
                 <Setter TargetName="ctlLeft" Property="Grid.Column" Value="0"/> 
                 <Setter TargetName="ctlRight" Property="Grid.Column" Value="0"/> 
                 <Setter TargetName="ctlRight" Property="Grid.Row" Value="1"/> 
                 <Setter TargetName="ctlRight" Property="Grid.ColumnSpan" Value="5"/> 
             </DataTrigger> 
  
             <DataTrigger Binding="{Binding Path=InlineTemplate.HeaderDataTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type tv:TreeViewItemProperty}}}" Value="{x:Null}"> 
                 <Setter TargetName="ctlLeft" Property="ContentTemplate" Value="{StaticResource OperatorDetailSimpleDataBaseContentDisplay}"/> 
             </DataTrigger> 
  
             <DataTrigger Binding="{Binding ElementName=ctlLeft, Path=Content}" Value="{x:Null}"> 
                 <Setter TargetName="ColLeft" Property="Width" Value="0"/> 
                 <Setter TargetName="ColRight" Property="Width" Value="*"/> 
                 <Setter TargetName="ctlSplit" Property="Visibility" Value="Collapsed"/> 
             </DataTrigger> 
  
             <DataTrigger Binding="{Binding ElementName=ctlRight, Path=Content}" Value="{x:Null}"> 
                 <Setter TargetName="ColLeft" Property="Width" Value="*"/> 
                 <Setter TargetName="ColRight" Property="Width" Value="0"/> 
                 <Setter TargetName="ctlSplit" Property="Visibility" Value="Collapsed"/> 
             </DataTrigger> 
  
             <MultiDataTrigger> 
                 <MultiDataTrigger.Conditions> 
                     <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType={x:Type tv:TreeViewItemProperty}}}" Value="True" /> 
                     <Condition Binding="{Binding HaveIcon, RelativeSource={RelativeSource AncestorType={x:Type tv:TreeViewItemProperty}}}" Value="True" /> 
                 </MultiDataTrigger.Conditions> 
                 <Setter TargetName="Expander" Property="Visibility" Value="Visible" />
                 <Setter TargetName="GroupLine" Property="Visibility" Value="Visible" /> 
             </MultiDataTrigger>
            
             <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType={x:Type tv:TreeViewItemProperty}}}" Value="False" />
                    <Condition Binding="{Binding HaveIcon, RelativeSource={RelativeSource AncestorType={x:Type tv:TreeViewItemProperty}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                <Setter TargetName="GroupLine" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
             
        </DataTemplate.Triggers> 
     </DataTemplate> 
  
     <DataTemplate x:Key="DisplayCollectionGroup" > 
         <TextBlock HorizontalAlignment="Stretch"> 
             <TextBlock.Text> 
                 <MultiBinding StringFormat="Count : {0}"> 
                     <Binding Path="Count" /> 
                 </MultiBinding> 
             </TextBlock.Text> 
         </TextBlock> 
     </DataTemplate> 
  
     <ControlTemplate TargetType="{x:Type TreeViewItem}" x:Key="TreeViewItem_Gourp_NoIcon" >
        <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border x:Name="Bd" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}" 
                                                         BorderBrush="{TemplateBinding Border.BorderBrush}" Padding="{TemplateBinding Control.Padding}" 
                                                         Background="Transparent" SnapsToDevicePixels="True" Grid.Column="0" Grid.Row="0">
                    <ContentPresenter x:Name="PART_Header"  
                                                             Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                                             ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" 
                                                             ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" 
                                                             ContentSource="Header" HorizontalAlignment="Stretch" 
                                                             SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Border>
                <Grid Grid.Column="0" Grid.Row="1" HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ItemsPresenter x:Name="ItemsHost" HorizontalAlignment="Stretch"/>
                    <Border BorderThickness="0,0,0,1" Visibility="Collapsed"  
                             x:Name="PART_Border" BorderBrush="{StaticResource NodePopupItemBorder}"  
                             Height="1" Grid.Row="1"
                             HorizontalAlignment="Stretch" Margin="0,2,0,2" />
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded"  Value="False">
                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="Bd" Property="Background" Value="#FF414141"/>
                <Setter TargetName="Bd" Property="Margin" Value="0,0,0,1"/>
                <Setter TargetName="PART_Border" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=DefinitionType, RelativeSource={RelativeSource Self}}" Value="SessionDefinition">
                <Setter TargetName="PART_Border" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_Header" Property="Height" Value="0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

     <Style x:Key="OperatorDetailMultiItems" TargetType="{x:Type tv:TreeViewItemProperty}" > 
         <Setter Property="HorizontalContentAlignment" Value="Stretch" /> 
         <Setter Property="HorizontalAlignment" Value="Stretch" />
         <Setter Property="Template"> 
             <Setter.Value> 
                 <ControlTemplate TargetType="{x:Type tv:TreeViewItemProperty}"> 
                     <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch"> 
                         <ItemsPresenter HorizontalAlignment="Stretch"/> 
                     </Border> 
                 </ControlTemplate> 
             </Setter.Value> 
         </Setter> 
     </Style> 
      
     <ResourceDictionary x:Key="OperatorStatisticsTreeviewResource">
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="Foreground" Value="{Binding Foreground,  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type tv:PropertyTreeView}}}" />
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template" Value="{StaticResource TreeViewItem_Gourp_NoIcon}"/>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true"/>
                        <Condition Property="IsExpanded" Value="false"/>
                        <Condition Property="IsSelected" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Gray"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type tv:TreeViewItemProperty}">
             <Setter Property="Foreground" Value="{Binding Foreground,  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type tv:PropertyTreeView}}}" /> 
             <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/> 
             <Setter Property="HorizontalContentAlignment" Value="Stretch" /> 
             <Setter Property="HorizontalAlignment" Value="Stretch" /> 
             <Setter Property="HeaderTemplate" Value="{StaticResource ItemLeftAndRight}" /> 
             <Setter Property="Template" Value="{StaticResource TreeViewItem_Gourp_NoIcon}"/> 
            <Style.Triggers> 
                 <MultiTrigger> 
                     <MultiTrigger.Conditions> 
                         <Condition Property="IsMouseOver" Value="true"/> 
                         <Condition Property="IsExpanded" Value="false"/> 
                         <Condition Property="IsSelected" Value="false"/> 
                     </MultiTrigger.Conditions> 
                     <Setter Property="Background" Value="Gray"/> 
                 </MultiTrigger> 
             </Style.Triggers> 
         </Style> 
     </ResourceDictionary> 
      
     <Style TargetType="TreeView" x:Key="OperatorStatisticsTreeviewStyle" Resources="{StaticResource OperatorStatisticsTreeviewResource}"> 
         <Setter Property="Tag" Value="{Binding Path=Data.NodeData.OperatorObject, Mode=OneWay}" /> 
         <!--<Setter Property="commExtensions:SelectedItemCopyExtensions.IsEnabled" Value="True"/>--> 
         <Setter Property="HorizontalAlignment" Value="Stretch"/> 
         <Setter Property="VerticalAlignment" Value="Stretch"/> 
         <Setter Property="HorizontalContentAlignment" Value="Left"/> 
         <Setter Property="Padding" Value="0,8,5,5"/> 
         <Setter Property="Margin" Value="0,2,2,5"/> 
         <Setter Property="BorderThickness" Value="0"/> 
         <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/> 
         <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/> 
         <Setter Property="FocusManager.IsFocusScope" Value="True"/> 
         <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="Foreground" Value="#d0d0d0"/> 
         <Setter Property="Background" Value="Transparent"/> 
     </Style> 

</ResourceDictionary>